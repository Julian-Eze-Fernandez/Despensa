<EditForm Model="pago" OnValidSubmit="onValidSubmit">
    <DataAnnotationsValidator />
    <div class="form-group">
        <label>Numero del Usuario</label>
        <div>
            <InputNumber class="form-control" @bind-Value="@pago.UsuarioId" />
            <ValidationMessage For="@(() => pago.UsuarioId)" />
        </div>
    </div>

    <div class="form-group">
        <label>Numero del Proveedor</label>
        <div>
            <InputNumber class="form-control" @bind-Value="@pago.ProveedorId" />
            <ValidationMessage For="@(() => pago.ProveedorId)" />
        </div>
    </div>

    <div class="form-group">
        <label>Descripcion</label>
        <div>
            <InputText class="form-control" @bind-Value="@pago.Descripcion" />
            <ValidationMessage For="@(() => pago.Descripcion)" />
        </div>
    </div>

    <div class="form-group">
        <label>Monto</label>
        <div>
            <InputNumber class="form-control" @bind-Value="@pago.Monto" />
            <ValidationMessage For="@(() => pago.Monto)" />
        </div>
    </div>

    <div class="form-group">
        <label>Tipo de Pago</label>
        <div>
            <InputText class="form-control" @bind-Value="@pago.TipoPago" />
            <ValidationMessage For="@(() => pago.TipoPago)" />
        </div>
    </div>

    <br/>
    <button class="btn btn-primary" type="submit">Aceptar</button>
    <button class="btn btn-secondary" @onclick="onCancel">Cancelar</button>
</EditForm>

@code {
    //Parametro DTO que se va a cargar
    [Parameter] public Pago pago { get; set; } = new Pago();
    //Parametro Metodo de Grabacion
    [Parameter] public EventCallback onValidSubmit { get; set; }
    [Parameter] public EventCallback onCancel { get; set; }
}
