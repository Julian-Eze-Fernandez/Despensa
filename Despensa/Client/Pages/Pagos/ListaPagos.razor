@page "/pagos"
@inject IHttpServicio http

<PageTitle>PAGOS</PageTitle>

<HeadContent>
    <meta name="description" content="Listado de Pagos" />
</HeadContent>

<head>
    <link href='https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css' rel='stylesheet'>
    <link href="/css/Estilos/ListaPagos.css" rel="stylesheet" type="text/css" />
</head>

<body>

    <div class="tituloBtn">
        <h3>Lista de Pagos</h3>
        <a class="btn btn-primary btnCrear" href="pagos/crear">Crear Pago</a>
    </div>

    <table class="fuente">
        <tr>
            <th class="col-3">Proveedor</th>
            <th class="col-3">Descripcion</th>
            <th class="col-3">Monto</th>
            <th class="col-3">Tipo</th>
            <th></th>
            <th></th>
        </tr>

        @if (Error)
        {
            <tr>@Mensaje</tr>
        }
        else
        {
            @if (pagos == null)
            {
                <tr>Cargando...</tr>
            }
            else if (pagos.Count == 0)
            {
                <tr>No existen pagos.</tr>
            }
            else
            {
                foreach (var item in pagos)
                {
                    <tr>
                        <td>@item.ProveedorId</td>
                        <td>@item.Descripcion</td>
                        <td>@item.Monto</td>
                        <td>@item.TipoPago</td>
                        <td>
                            <a class="btnEditar"
                               href="pagos/editar/@item.Id">
                                <i class='bx bxs-edit-alt'></i>
                                @* Editar *@
                            </a>
                        </td>
                        <td>
                            <a class="btnBorrar"
                            @onclick="()=>Eliminar(item)">
                                <i class='bx bxs-trash'></i>
                                @* Borrar *@
                            </a>
                        </td>
                    </tr>
                }
            }
        }
    </table>

    <Confirmacion @ref="confirmacion"
                  verCancelar="true"
                  verOk="true"
                  textOk="Aceptar"
                  Titulo="Borrar Pago"
                  onCancel="Cancelar"
                  onConfirm="Borrar">

        <div>
            <p>Está por borrar el pago @PagoBorrar.Descripcion</p>
            <br />
            <p>¿Está seguro que desea continuar?</p>
        </div>
    </Confirmacion>
</body>


@code {
    Confirmacion confirmacion;

    List<Pago>? pagos;
    bool Error = false;
    string Mensaje = "";
    Pago PagoBorrar;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        await Leer();
    }

    private async Task Leer()
    {
        pagos = null;
        var respuesta = await http.Get<List<Pago>>("api/Pagos");
        Error = respuesta.Error;
        if (!respuesta.Error)
        {
            pagos = respuesta.Respuesta;
        }
        else
        {
            Mensaje = await respuesta.ObtenerError();
        }
    }

    private void Cancelar()
    {
        confirmacion.Ocultar();
        PagoBorrar = null;
    }

    private async Task Eliminar(Pago pagoBorrar)
    {
        PagoBorrar = pagoBorrar;
        confirmacion.Ver();
    }

    private async Task Borrar()
    {
        var respuesta = await http.Delete($"api/pagos/{PagoBorrar.Id}");
        if (respuesta.Error)
        {
            var body = "Error, no se puede borrar el pago";
        }

        Cancelar();
        await Leer();
    }
}
